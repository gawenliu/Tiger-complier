State 1 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 104 conflicts: 13 shift/reduce
State 105 conflicts: 12 shift/reduce
State 131 conflicts: 12 shift/reduce
State 152 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: varexp
    3    | opexp
    4    | recordexp
    5    | seqexp
    6    | assignexp
    7    | ifexp
    8    | whileexp
    9    | forexp
   10    | letexp
   11    | arrayexp
   12    | callexp
   13    | minusexp
   14    | NIL
   15    | INT
   16    | STRING
   17    | BREAK

   18 varexp: lvalue

   19 callexp: ID LPAREN args RPAREN

   20 opexp: exp PLUS exp
   21      | exp MINUS exp
   22      | exp TIMES exp
   23      | exp DIVIDE exp
   24      | exp EQ exp
   25      | exp NEQ exp
   26      | exp LT exp
   27      | exp LE exp
   28      | exp GT exp
   29      | exp GE exp

   30 minusexp: MINUS exp

   31 recordexp: ID LBRACE efieldList RBRACE

   32 seqexp: LPAREN expseq RPAREN

   33 assignexp: lvalue ASSIGN exp

   34 ifexp: IF exp THEN exp ELSE exp
   35      | IF exp THEN exp
   36      | exp OR exp
   37      | exp AND exp

   38 whileexp: WHILE exp DO exp

   39 forexp: FOR ID ASSIGN exp TO exp DO exp

   40 letexp: LET decs IN expseq END

   41 arrayexp: ID LBRACK exp RBRACK OF exp

   42 lvalue: ID
   43       | lvalue LBRACK exp RBRACK
   44       | ID LBRACK exp RBRACK
   45       | lvalue DOT ID

   46 args: %empty
   47     | exp
   48     | exp COMMA args_

   49 args_: exp
   50      | exp COMMA args_

   51 expseq: %empty
   52       | exp
   53       | exp SEMICOLON expseq

   54 efield: ID EQ exp

   55 efieldList: %empty
   56           | efield
   57           | efield COMMA efieldList_

   58 efieldList_: efield
   59            | efield COMMA efieldList_

   60 decs: dec
   61     | dec decs

   62 dec: typeDec
   63    | varDec
   64    | funcDec

   65 typeDec: nametyList

   66 varDec: VAR ID ASSIGN exp
   67       | VAR ID COLON ID ASSIGN exp

   68 funcDec: funcDecList

   69 funcDec_: FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ exp
   70         | FUNCTION ID LPAREN fieldList RPAREN EQ exp

   71 funcDecList: funcDec_
   72            | funcDec_ funcDecList

   73 namety: TYPE ID EQ ID
   74       | TYPE ID EQ LBRACE fieldList RBRACE
   75       | TYPE ID EQ ARRAY OF ID

   76 nametyList: namety
   77           | namety nametyList

   78 field: ID COLON ID

   79 fieldList: %empty
   80          | field
   81          | field COMMA fieldList_

   82 fieldList_: field
   83           | field COMMA fieldList_


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 19 31 39 41 42 44 45 54 66 67 69 70 73 74 75 78
STRING (259) 16
INT (260) 15
COMMA (261) 48 50 57 59 81 83
COLON (262) 67 69 78
SEMICOLON (263) 53
LPAREN (264) 19 32 69 70
RPAREN (265) 19 32 69 70
LBRACK (266) 41 43 44
RBRACK (267) 41 43 44
LBRACE (268) 31 74
RBRACE (269) 31 74
DOT (270) 45
PLUS (271) 20
MINUS (272) 21 30
TIMES (273) 22
DIVIDE (274) 23
EQ (275) 24 54 69 70 73 74 75
NEQ (276) 25
LT (277) 26
LE (278) 27
GT (279) 28
GE (280) 29
AND (281) 37
OR (282) 36
ASSIGN (283) 33 39 66 67
ARRAY (284) 75
IF (285) 34 35
THEN (286) 34 35
ELSE (287) 34
WHILE (288) 38
FOR (289) 39
TO (290) 39
DO (291) 38 39
LET (292) 40
IN (293) 40
END (294) 40
OF (295) 41 75
BREAK (296) 17
NIL (297) 14
FUNCTION (298) 69 70
VAR (299) 66 67
TYPE (300) 73 74 75
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 1 20
    21 22 23 24 25 26 27 28 29 30 33 34 35 36 37 38 39 41 43 44 47
    48 49 50 52 53 54 66 67 69 70
varexp (50)
    on left: 18, on right: 2
callexp (51)
    on left: 19, on right: 12
opexp (52)
    on left: 20 21 22 23 24 25 26 27 28 29, on right: 3
minusexp (53)
    on left: 30, on right: 13
recordexp (54)
    on left: 31, on right: 4
seqexp (55)
    on left: 32, on right: 5
assignexp (56)
    on left: 33, on right: 6
ifexp (57)
    on left: 34 35 36 37, on right: 7
whileexp (58)
    on left: 38, on right: 8
forexp (59)
    on left: 39, on right: 9
letexp (60)
    on left: 40, on right: 10
arrayexp (61)
    on left: 41, on right: 11
lvalue (62)
    on left: 42 43 44 45, on right: 18 33 43 45
args (63)
    on left: 46 47 48, on right: 19
args_ (64)
    on left: 49 50, on right: 48 50
expseq (65)
    on left: 51 52 53, on right: 32 40 53
efield (66)
    on left: 54, on right: 56 57 58 59
efieldList (67)
    on left: 55 56 57, on right: 31
efieldList_ (68)
    on left: 58 59, on right: 57 59
decs (69)
    on left: 60 61, on right: 40 61
dec (70)
    on left: 62 63 64, on right: 60 61
typeDec (71)
    on left: 65, on right: 62
varDec (72)
    on left: 66 67, on right: 63
funcDec (73)
    on left: 68, on right: 64
funcDec_ (74)
    on left: 69 70, on right: 71 72
funcDecList (75)
    on left: 71 72, on right: 68 72
namety (76)
    on left: 73 74 75, on right: 76 77
nametyList (77)
    on left: 76 77, on right: 65 77
field (78)
    on left: 78, on right: 80 81 82 83
fieldList (79)
    on left: 79 80 81, on right: 69 70 74
fieldList_ (80)
    on left: 82 83, on right: 81 83


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program    go to state 12
    exp        go to state 13
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 1

   19 callexp: ID . LPAREN args RPAREN
   31 recordexp: ID . LBRACE efieldList RBRACE
   41 arrayexp: ID . LBRACK exp RBRACK OF exp
   42 lvalue: ID .
   44       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 27
    LBRACK  shift, and go to state 28
    LBRACE  shift, and go to state 29

    LBRACK    [reduce using rule 42 (lvalue)]
    $default  reduce using rule 42 (lvalue)


State 2

   16 exp: STRING .

    $default  reduce using rule 16 (exp)


State 3

   15 exp: INT .

    $default  reduce using rule 15 (exp)


State 4

   32 seqexp: LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 51 (expseq)

    exp        go to state 30
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26
    expseq     go to state 31


State 5

   30 minusexp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 32
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 6

   34 ifexp: IF . exp THEN exp ELSE exp
   35      | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 33
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 7

   38 whileexp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 34
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 8

   39 forexp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 35


State 9

   40 letexp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 36
    VAR       shift, and go to state 37
    TYPE      shift, and go to state 38

    decs         go to state 39
    dec          go to state 40
    typeDec      go to state 41
    varDec       go to state 42
    funcDec      go to state 43
    funcDec_     go to state 44
    funcDecList  go to state 45
    namety       go to state 46
    nametyList   go to state 47


State 10

   17 exp: BREAK .

    $default  reduce using rule 17 (exp)


State 11

   14 exp: NIL .

    $default  reduce using rule 14 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 48


State 13

    1 program: exp .
   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60

    $default  reduce using rule 1 (program)


State 14

    2 exp: varexp .

    $default  reduce using rule 2 (exp)


State 15

   12 exp: callexp .

    $default  reduce using rule 12 (exp)


State 16

    3 exp: opexp .

    $default  reduce using rule 3 (exp)


State 17

   13 exp: minusexp .

    $default  reduce using rule 13 (exp)


State 18

    4 exp: recordexp .

    $default  reduce using rule 4 (exp)


State 19

    5 exp: seqexp .

    $default  reduce using rule 5 (exp)


State 20

    6 exp: assignexp .

    $default  reduce using rule 6 (exp)


State 21

    7 exp: ifexp .

    $default  reduce using rule 7 (exp)


State 22

    8 exp: whileexp .

    $default  reduce using rule 8 (exp)


State 23

    9 exp: forexp .

    $default  reduce using rule 9 (exp)


State 24

   10 exp: letexp .

    $default  reduce using rule 10 (exp)


State 25

   11 exp: arrayexp .

    $default  reduce using rule 11 (exp)


State 26

   18 varexp: lvalue .
   33 assignexp: lvalue . ASSIGN exp
   43 lvalue: lvalue . LBRACK exp RBRACK
   45       | lvalue . DOT ID

    LBRACK  shift, and go to state 61
    DOT     shift, and go to state 62
    ASSIGN  shift, and go to state 63

    $default  reduce using rule 18 (varexp)


State 27

   19 callexp: ID LPAREN . args RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 46 (args)

    exp        go to state 64
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26
    args       go to state 65


State 28

   41 arrayexp: ID LBRACK . exp RBRACK OF exp
   44 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 66
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 29

   31 recordexp: ID LBRACE . efieldList RBRACE

    ID  shift, and go to state 67

    $default  reduce using rule 55 (efieldList)

    efield      go to state 68
    efieldList  go to state 69


State 30

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   52 expseq: exp .
   53       | exp . SEMICOLON expseq

    SEMICOLON  shift, and go to state 70
    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    TIMES      shift, and go to state 51
    DIVIDE     shift, and go to state 52
    EQ         shift, and go to state 53
    NEQ        shift, and go to state 54
    LT         shift, and go to state 55
    LE         shift, and go to state 56
    GT         shift, and go to state 57
    GE         shift, and go to state 58
    AND        shift, and go to state 59
    OR         shift, and go to state 60

    $default  reduce using rule 52 (expseq)


State 31

   32 seqexp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 71


State 32

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   30 minusexp: MINUS exp .
   36 ifexp: exp . OR exp
   37      | exp . AND exp

    $default  reduce using rule 30 (minusexp)


State 33

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   34 ifexp: IF exp . THEN exp ELSE exp
   35      | IF exp . THEN exp
   36      | exp . OR exp
   37      | exp . AND exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60
    THEN    shift, and go to state 72


State 34

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   38 whileexp: WHILE exp . DO exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60
    DO      shift, and go to state 73


State 35

   39 forexp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 74


State 36

   69 funcDec_: FUNCTION . ID LPAREN fieldList RPAREN COLON ID EQ exp
   70         | FUNCTION . ID LPAREN fieldList RPAREN EQ exp

    ID  shift, and go to state 75


State 37

   66 varDec: VAR . ID ASSIGN exp
   67       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 76


State 38

   73 namety: TYPE . ID EQ ID
   74       | TYPE . ID EQ LBRACE fieldList RBRACE
   75       | TYPE . ID EQ ARRAY OF ID

    ID  shift, and go to state 77


State 39

   40 letexp: LET decs . IN expseq END

    IN  shift, and go to state 78


State 40

   60 decs: dec .
   61     | dec . decs

    FUNCTION  shift, and go to state 36
    VAR       shift, and go to state 37
    TYPE      shift, and go to state 38

    $default  reduce using rule 60 (decs)

    decs         go to state 79
    dec          go to state 40
    typeDec      go to state 41
    varDec       go to state 42
    funcDec      go to state 43
    funcDec_     go to state 44
    funcDecList  go to state 45
    namety       go to state 46
    nametyList   go to state 47


State 41

   62 dec: typeDec .

    $default  reduce using rule 62 (dec)


State 42

   63 dec: varDec .

    $default  reduce using rule 63 (dec)


State 43

   64 dec: funcDec .

    $default  reduce using rule 64 (dec)


State 44

   71 funcDecList: funcDec_ .
   72            | funcDec_ . funcDecList

    FUNCTION  shift, and go to state 36

    FUNCTION  [reduce using rule 71 (funcDecList)]
    $default  reduce using rule 71 (funcDecList)

    funcDec_     go to state 44
    funcDecList  go to state 80


State 45

   68 funcDec: funcDecList .

    $default  reduce using rule 68 (funcDec)


State 46

   76 nametyList: namety .
   77           | namety . nametyList

    TYPE  shift, and go to state 38

    TYPE      [reduce using rule 76 (nametyList)]
    $default  reduce using rule 76 (nametyList)

    namety      go to state 46
    nametyList  go to state 81


State 47

   65 typeDec: nametyList .

    $default  reduce using rule 65 (typeDec)


State 48

    0 $accept: program $end .

    $default  accept


State 49

   20 opexp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 82
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 50

   21 opexp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 83
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 51

   22 opexp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 84
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 52

   23 opexp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 85
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 53

   24 opexp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 86
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 54

   25 opexp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 87
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 55

   26 opexp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 88
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 56

   27 opexp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 89
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 57

   28 opexp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 90
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 58

   29 opexp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 91
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 59

   37 ifexp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 92
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 60

   36 ifexp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 93
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 61

   43 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 94
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 62

   45 lvalue: lvalue DOT . ID

    ID  shift, and go to state 95


State 63

   33 assignexp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 96
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 64

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   47 args: exp .
   48     | exp . COMMA args_

    COMMA   shift, and go to state 97
    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60

    $default  reduce using rule 47 (args)


State 65

   19 callexp: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 98


State 66

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   41 arrayexp: ID LBRACK exp . RBRACK OF exp
   44 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 99
    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60


State 67

   54 efield: ID . EQ exp

    EQ  shift, and go to state 100


State 68

   56 efieldList: efield .
   57           | efield . COMMA efieldList_

    COMMA  shift, and go to state 101

    $default  reduce using rule 56 (efieldList)


State 69

   31 recordexp: ID LBRACE efieldList . RBRACE

    RBRACE  shift, and go to state 102


State 70

   53 expseq: exp SEMICOLON . expseq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 51 (expseq)

    exp        go to state 30
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26
    expseq     go to state 103


State 71

   32 seqexp: LPAREN expseq RPAREN .

    $default  reduce using rule 32 (seqexp)


State 72

   34 ifexp: IF exp THEN . exp ELSE exp
   35      | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 104
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 73

   38 whileexp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 105
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 74

   39 forexp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 106
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 75

   69 funcDec_: FUNCTION ID . LPAREN fieldList RPAREN COLON ID EQ exp
   70         | FUNCTION ID . LPAREN fieldList RPAREN EQ exp

    LPAREN  shift, and go to state 107


State 76

   66 varDec: VAR ID . ASSIGN exp
   67       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 108
    ASSIGN  shift, and go to state 109


State 77

   73 namety: TYPE ID . EQ ID
   74       | TYPE ID . EQ LBRACE fieldList RBRACE
   75       | TYPE ID . EQ ARRAY OF ID

    EQ  shift, and go to state 110


State 78

   40 letexp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 51 (expseq)

    exp        go to state 30
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26
    expseq     go to state 111


State 79

   61 decs: dec decs .

    $default  reduce using rule 61 (decs)


State 80

   72 funcDecList: funcDec_ funcDecList .

    $default  reduce using rule 72 (funcDecList)


State 81

   77 nametyList: namety nametyList .

    $default  reduce using rule 77 (nametyList)


State 82

   20 opexp: exp . PLUS exp
   20      | exp PLUS exp .
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp

    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 20 (opexp)


State 83

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   21      | exp MINUS exp .
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp

    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 21 (opexp)


State 84

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   22      | exp TIMES exp .
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp

    $default  reduce using rule 22 (opexp)


State 85

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   23      | exp DIVIDE exp .
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp

    $default  reduce using rule 23 (opexp)


State 86

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   24      | exp EQ exp .
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 24 (opexp)


State 87

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   25      | exp NEQ exp .
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 25 (opexp)


State 88

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   26      | exp LT exp .
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 26 (opexp)


State 89

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   27      | exp LE exp .
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 27 (opexp)


State 90

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   28      | exp GT exp .
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 28 (opexp)


State 91

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   29      | exp GE exp .
   36 ifexp: exp . OR exp
   37      | exp . AND exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 29 (opexp)


State 92

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   37      | exp AND exp .

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58

    $default  reduce using rule 37 (ifexp)


State 93

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   36      | exp OR exp .
   37      | exp . AND exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58

    $default  reduce using rule 36 (ifexp)


State 94

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   43 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 112
    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60


State 95

   45 lvalue: lvalue DOT ID .

    $default  reduce using rule 45 (lvalue)


State 96

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   33 assignexp: lvalue ASSIGN exp .
   36 ifexp: exp . OR exp
   37      | exp . AND exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60

    $default  reduce using rule 33 (assignexp)


State 97

   48 args: exp COMMA . args_

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 113
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26
    args_      go to state 114


State 98

   19 callexp: ID LPAREN args RPAREN .

    $default  reduce using rule 19 (callexp)


State 99

   41 arrayexp: ID LBRACK exp RBRACK . OF exp
   44 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 115

    $default  reduce using rule 44 (lvalue)


State 100

   54 efield: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 116
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 101

   57 efieldList: efield COMMA . efieldList_

    ID  shift, and go to state 67

    efield       go to state 117
    efieldList_  go to state 118


State 102

   31 recordexp: ID LBRACE efieldList RBRACE .

    $default  reduce using rule 31 (recordexp)


State 103

   53 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 53 (expseq)


State 104

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   34 ifexp: IF exp THEN exp . ELSE exp
   35      | IF exp THEN exp .
   36      | exp . OR exp
   37      | exp . AND exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60
    ELSE    shift, and go to state 119

    PLUS      [reduce using rule 35 (ifexp)]
    MINUS     [reduce using rule 35 (ifexp)]
    TIMES     [reduce using rule 35 (ifexp)]
    DIVIDE    [reduce using rule 35 (ifexp)]
    EQ        [reduce using rule 35 (ifexp)]
    NEQ       [reduce using rule 35 (ifexp)]
    LT        [reduce using rule 35 (ifexp)]
    LE        [reduce using rule 35 (ifexp)]
    GT        [reduce using rule 35 (ifexp)]
    GE        [reduce using rule 35 (ifexp)]
    AND       [reduce using rule 35 (ifexp)]
    OR        [reduce using rule 35 (ifexp)]
    ELSE      [reduce using rule 35 (ifexp)]
    $default  reduce using rule 35 (ifexp)


State 105

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   38 whileexp: WHILE exp DO exp .

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60

    PLUS      [reduce using rule 38 (whileexp)]
    MINUS     [reduce using rule 38 (whileexp)]
    TIMES     [reduce using rule 38 (whileexp)]
    DIVIDE    [reduce using rule 38 (whileexp)]
    EQ        [reduce using rule 38 (whileexp)]
    NEQ       [reduce using rule 38 (whileexp)]
    LT        [reduce using rule 38 (whileexp)]
    LE        [reduce using rule 38 (whileexp)]
    GT        [reduce using rule 38 (whileexp)]
    GE        [reduce using rule 38 (whileexp)]
    AND       [reduce using rule 38 (whileexp)]
    OR        [reduce using rule 38 (whileexp)]
    $default  reduce using rule 38 (whileexp)


State 106

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   39 forexp: FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60
    TO      shift, and go to state 120


State 107

   69 funcDec_: FUNCTION ID LPAREN . fieldList RPAREN COLON ID EQ exp
   70         | FUNCTION ID LPAREN . fieldList RPAREN EQ exp

    ID  shift, and go to state 121

    $default  reduce using rule 79 (fieldList)

    field      go to state 122
    fieldList  go to state 123


State 108

   67 varDec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 124


State 109

   66 varDec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 125
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 110

   73 namety: TYPE ID EQ . ID
   74       | TYPE ID EQ . LBRACE fieldList RBRACE
   75       | TYPE ID EQ . ARRAY OF ID

    ID      shift, and go to state 126
    LBRACE  shift, and go to state 127
    ARRAY   shift, and go to state 128


State 111

   40 letexp: LET decs IN expseq . END

    END  shift, and go to state 129


State 112

   43 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 43 (lvalue)


State 113

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   49 args_: exp .
   50      | exp . COMMA args_

    COMMA   shift, and go to state 130
    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60

    $default  reduce using rule 49 (args_)


State 114

   48 args: exp COMMA args_ .

    $default  reduce using rule 48 (args)


State 115

   41 arrayexp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 131
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 116

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   54 efield: ID EQ exp .

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60

    $default  reduce using rule 54 (efield)


State 117

   58 efieldList_: efield .
   59            | efield . COMMA efieldList_

    COMMA  shift, and go to state 132

    $default  reduce using rule 58 (efieldList_)


State 118

   57 efieldList: efield COMMA efieldList_ .

    $default  reduce using rule 57 (efieldList)


State 119

   34 ifexp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 133
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 120

   39 forexp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 134
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 121

   78 field: ID . COLON ID

    COLON  shift, and go to state 135


State 122

   80 fieldList: field .
   81          | field . COMMA fieldList_

    COMMA  shift, and go to state 136

    $default  reduce using rule 80 (fieldList)


State 123

   69 funcDec_: FUNCTION ID LPAREN fieldList . RPAREN COLON ID EQ exp
   70         | FUNCTION ID LPAREN fieldList . RPAREN EQ exp

    RPAREN  shift, and go to state 137


State 124

   67 varDec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 138


State 125

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   66 varDec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60

    $default  reduce using rule 66 (varDec)


State 126

   73 namety: TYPE ID EQ ID .

    $default  reduce using rule 73 (namety)


State 127

   74 namety: TYPE ID EQ LBRACE . fieldList RBRACE

    ID  shift, and go to state 121

    $default  reduce using rule 79 (fieldList)

    field      go to state 122
    fieldList  go to state 139


State 128

   75 namety: TYPE ID EQ ARRAY . OF ID

    OF  shift, and go to state 140


State 129

   40 letexp: LET decs IN expseq END .

    $default  reduce using rule 40 (letexp)


State 130

   50 args_: exp COMMA . args_

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 113
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26
    args_      go to state 141


State 131

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   41 arrayexp: ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60

    PLUS      [reduce using rule 41 (arrayexp)]
    MINUS     [reduce using rule 41 (arrayexp)]
    TIMES     [reduce using rule 41 (arrayexp)]
    DIVIDE    [reduce using rule 41 (arrayexp)]
    EQ        [reduce using rule 41 (arrayexp)]
    NEQ       [reduce using rule 41 (arrayexp)]
    LT        [reduce using rule 41 (arrayexp)]
    LE        [reduce using rule 41 (arrayexp)]
    GT        [reduce using rule 41 (arrayexp)]
    GE        [reduce using rule 41 (arrayexp)]
    AND       [reduce using rule 41 (arrayexp)]
    OR        [reduce using rule 41 (arrayexp)]
    $default  reduce using rule 41 (arrayexp)


State 132

   59 efieldList_: efield COMMA . efieldList_

    ID  shift, and go to state 67

    efield       go to state 117
    efieldList_  go to state 142


State 133

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   34 ifexp: IF exp THEN exp ELSE exp .
   36      | exp . OR exp
   37      | exp . AND exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60

    $default  reduce using rule 34 (ifexp)


State 134

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   39 forexp: FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60
    DO      shift, and go to state 143


State 135

   78 field: ID COLON . ID

    ID  shift, and go to state 144


State 136

   81 fieldList: field COMMA . fieldList_

    ID  shift, and go to state 121

    field       go to state 145
    fieldList_  go to state 146


State 137

   69 funcDec_: FUNCTION ID LPAREN fieldList RPAREN . COLON ID EQ exp
   70         | FUNCTION ID LPAREN fieldList RPAREN . EQ exp

    COLON  shift, and go to state 147
    EQ     shift, and go to state 148


State 138

   67 varDec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 149
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 139

   74 namety: TYPE ID EQ LBRACE fieldList . RBRACE

    RBRACE  shift, and go to state 150


State 140

   75 namety: TYPE ID EQ ARRAY OF . ID

    ID  shift, and go to state 151


State 141

   50 args_: exp COMMA args_ .

    $default  reduce using rule 50 (args_)


State 142

   59 efieldList_: efield COMMA efieldList_ .

    $default  reduce using rule 59 (efieldList_)


State 143

   39 forexp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 152
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 144

   78 field: ID COLON ID .

    $default  reduce using rule 78 (field)


State 145

   82 fieldList_: field .
   83           | field . COMMA fieldList_

    COMMA  shift, and go to state 153

    $default  reduce using rule 82 (fieldList_)


State 146

   81 fieldList: field COMMA fieldList_ .

    $default  reduce using rule 81 (fieldList)


State 147

   69 funcDec_: FUNCTION ID LPAREN fieldList RPAREN COLON . ID EQ exp

    ID  shift, and go to state 154


State 148

   70 funcDec_: FUNCTION ID LPAREN fieldList RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 155
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 149

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   67 varDec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60

    $default  reduce using rule 67 (varDec)


State 150

   74 namety: TYPE ID EQ LBRACE fieldList RBRACE .

    $default  reduce using rule 74 (namety)


State 151

   75 namety: TYPE ID EQ ARRAY OF ID .

    $default  reduce using rule 75 (namety)


State 152

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   39 forexp: FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60

    PLUS      [reduce using rule 39 (forexp)]
    MINUS     [reduce using rule 39 (forexp)]
    TIMES     [reduce using rule 39 (forexp)]
    DIVIDE    [reduce using rule 39 (forexp)]
    EQ        [reduce using rule 39 (forexp)]
    NEQ       [reduce using rule 39 (forexp)]
    LT        [reduce using rule 39 (forexp)]
    LE        [reduce using rule 39 (forexp)]
    GT        [reduce using rule 39 (forexp)]
    GE        [reduce using rule 39 (forexp)]
    AND       [reduce using rule 39 (forexp)]
    OR        [reduce using rule 39 (forexp)]
    $default  reduce using rule 39 (forexp)


State 153

   83 fieldList_: field COMMA . fieldList_

    ID  shift, and go to state 121

    field       go to state 145
    fieldList_  go to state 156


State 154

   69 funcDec_: FUNCTION ID LPAREN fieldList RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 157


State 155

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   70 funcDec_: FUNCTION ID LPAREN fieldList RPAREN EQ exp .

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60

    $default  reduce using rule 70 (funcDec_)


State 156

   83 fieldList_: field COMMA fieldList_ .

    $default  reduce using rule 83 (fieldList_)


State 157

   69 funcDec_: FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 158
    varexp     go to state 14
    callexp    go to state 15
    opexp      go to state 16
    minusexp   go to state 17
    recordexp  go to state 18
    seqexp     go to state 19
    assignexp  go to state 20
    ifexp      go to state 21
    whileexp   go to state 22
    forexp     go to state 23
    letexp     go to state 24
    arrayexp   go to state 25
    lvalue     go to state 26


State 158

   20 opexp: exp . PLUS exp
   21      | exp . MINUS exp
   22      | exp . TIMES exp
   23      | exp . DIVIDE exp
   24      | exp . EQ exp
   25      | exp . NEQ exp
   26      | exp . LT exp
   27      | exp . LE exp
   28      | exp . GT exp
   29      | exp . GE exp
   36 ifexp: exp . OR exp
   37      | exp . AND exp
   69 funcDec_: FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60

    $default  reduce using rule 69 (funcDec_)
